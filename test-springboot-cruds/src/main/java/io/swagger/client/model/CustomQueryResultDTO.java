/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CustomQueryResultDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-01-30T22:53:54.831415700+01:00[Europe/Paris]")
public class CustomQueryResultDTO {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("field1")
  private String field1 = null;

  @SerializedName("field2")
  private String field2 = null;

  @SerializedName("refId")
  private Long refId = null;

  @SerializedName("refField1")
  private String refField1 = null;

  @SerializedName("refField2")
  private String refField2 = null;

  public CustomQueryResultDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CustomQueryResultDTO field1(String field1) {
    this.field1 = field1;
    return this;
  }

   /**
   * Get field1
   * @return field1
  **/
  @Schema(description = "")
  public String getField1() {
    return field1;
  }

  public void setField1(String field1) {
    this.field1 = field1;
  }

  public CustomQueryResultDTO field2(String field2) {
    this.field2 = field2;
    return this;
  }

   /**
   * Get field2
   * @return field2
  **/
  @Schema(description = "")
  public String getField2() {
    return field2;
  }

  public void setField2(String field2) {
    this.field2 = field2;
  }

  public CustomQueryResultDTO refId(Long refId) {
    this.refId = refId;
    return this;
  }

   /**
   * Get refId
   * @return refId
  **/
  @Schema(description = "")
  public Long getRefId() {
    return refId;
  }

  public void setRefId(Long refId) {
    this.refId = refId;
  }

  public CustomQueryResultDTO refField1(String refField1) {
    this.refField1 = refField1;
    return this;
  }

   /**
   * Get refField1
   * @return refField1
  **/
  @Schema(description = "")
  public String getRefField1() {
    return refField1;
  }

  public void setRefField1(String refField1) {
    this.refField1 = refField1;
  }

  public CustomQueryResultDTO refField2(String refField2) {
    this.refField2 = refField2;
    return this;
  }

   /**
   * Get refField2
   * @return refField2
  **/
  @Schema(description = "")
  public String getRefField2() {
    return refField2;
  }

  public void setRefField2(String refField2) {
    this.refField2 = refField2;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomQueryResultDTO customQueryResultDTO = (CustomQueryResultDTO) o;
    return Objects.equals(this.id, customQueryResultDTO.id) &&
        Objects.equals(this.field1, customQueryResultDTO.field1) &&
        Objects.equals(this.field2, customQueryResultDTO.field2) &&
        Objects.equals(this.refId, customQueryResultDTO.refId) &&
        Objects.equals(this.refField1, customQueryResultDTO.refField1) &&
        Objects.equals(this.refField2, customQueryResultDTO.refField2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, field1, field2, refId, refField1, refField2);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomQueryResultDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    field1: ").append(toIndentedString(field1)).append("\n");
    sb.append("    field2: ").append(toIndentedString(field2)).append("\n");
    sb.append("    refId: ").append(toIndentedString(refId)).append("\n");
    sb.append("    refField1: ").append(toIndentedString(refField1)).append("\n");
    sb.append("    refField2: ").append(toIndentedString(refField2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
